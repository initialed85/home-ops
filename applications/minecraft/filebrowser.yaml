apiVersion: v1
kind: ConfigMap
metadata:
  namespace: minecraft
  name: filebrowser
data:
  filebrowser.json: |
    {
      "port": 80,
      "baseURL": "/filebrowser",
      "address": "",
      "log": "stdout",
      "database": "/database.db",
      "root": "/srv"
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: minecraft
  name: filebrowser
  labels:
    app: filebrowser
spec:
  replicas: 1
  selector:
    matchLabels:
      app: filebrowser
  template:
    metadata:
      labels:
        app: filebrowser
    spec:
      volumes:
      - name: filebrowser
        configMap:
          name: filebrowser
      - name: shared
        persistentVolumeClaim:
          claimName: minecraft
          readOnly: false
      containers:
      - name: filebrowser
        image: filebrowser/filebrowser:v2.22.4
        imagePullPolicy: Always
        volumeMounts:
        - name: filebrowser
          subPath: filebrowser.json
          mountPath: /.filebrowser.json
        - name: shared
          subPath: minecraft/
          mountPath: /srv/minecraft/
        ports:
        - containerPort: 80
        command: ["/filebrowser", "--disable-preview-resize", "--disable-thumbnails"]
---
apiVersion: v1
kind: Service
metadata:
  name: filebrowser
  namespace: minecraft
spec:
  selector:
    app: filebrowser
  ports:
  - name: filebrowser
    port: 8080
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: minecraft
  name: minecraft
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  ingressClassName: traefik
  tls:
  - hosts:
    - minecraft.initialed85.cc
    secretName: minecraft
  rules:
  - host: minecraft.initialed85.cc
    http:
      paths:
      - pathType: Prefix
        path: /filebrowser
        backend:
          service:
            name: filebrowser
            port:
              number: 8080
