---
apiVersion: v1
data:
  parca.yaml: |-
    "object_storage":
      "bucket":
        "config":
          "directory": "/var/lib/parca"
        "type": "FILESYSTEM"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: observability
    app.kubernetes.io/instance: parca
    app.kubernetes.io/name: parca
    app.kubernetes.io/version: v0.24.0
  name: parca
  namespace: parca
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: observability
    app.kubernetes.io/instance: parca
    app.kubernetes.io/name: parca
    app.kubernetes.io/version: v0.24.0
  name: parca
  namespace: parca
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: observability
      app.kubernetes.io/instance: parca
      app.kubernetes.io/name: parca
  template:
    metadata:
      labels:
        app.kubernetes.io/component: observability
        app.kubernetes.io/instance: parca
        app.kubernetes.io/name: parca
        app.kubernetes.io/version: v0.24.0
    spec:
      containers:
        - args:
            - /parca
            - --http-address=:7070
            - --config-path=/etc/parca/parca.yaml
            - --log-level=info
            - --cors-allowed-origins=*
            - --debuginfod-upstream-servers=debuginfod.systemtap.org
            - --debuginfod-http-request-timeout=5m
          image: ghcr.io/parca-dev/parca:v0.24.0
          livenessProbe:
            exec:
              command:
                - /grpc_health_probe
                - -v
                - -addr=:7070
            initialDelaySeconds: 5
          name: parca
          ports:
            - containerPort: 7070
              name: http
          readinessProbe:
            exec:
              command:
                - /grpc_health_probe
                - -v
                - -addr=:7070
            initialDelaySeconds: 10
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/parca
              name: config
            - mountPath: /var/lib/parca
              name: data
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups:
          - 65534
      serviceAccountName: parca
      terminationGracePeriodSeconds: 120
      volumes:
        - configMap:
            name: parca
          name: config
        - emptyDir: {}
          name: data
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: observability
    app.kubernetes.io/instance: parca
    app.kubernetes.io/name: parca
    app.kubernetes.io/version: v0.24.0
  name: parca
  namespace: parca
spec:
  ports:
    - name: http
      port: 7070
      targetPort: 7070
  selector:
    app.kubernetes.io/component: observability
    app.kubernetes.io/instance: parca
    app.kubernetes.io/name: parca
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: observability
    app.kubernetes.io/instance: parca
    app.kubernetes.io/name: parca
    app.kubernetes.io/version: v0.24.0
  name: parca
  namespace: parca
