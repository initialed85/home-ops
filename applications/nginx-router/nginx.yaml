apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: nginx-router
  name: nginx
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
        - name: nginx
          image: kube-registry:5000/nginx-router:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          resources: {}
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: nginx-router
  labels:
    monitoring: "true"
spec:
  selector:
    app: nginx
  ports:
    - name: nginx
      port: 80
      targetPort: 80
---
# kubectl -n nginx-router create secret generic --type kubernetes.io/basic-auth nginx-basic-auth --dry-run=client --from-literal='username=(redacted)' --from-literal='password=(redacted)' -o yaml | kubeseal --controller-name=sealed-secrets --controller-namespace=kube-system -o yaml
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: nginx-basic-auth
  namespace: nginx-router
spec:
  encryptedData:
    password: AgC435zbdCqpYhdlMNAsm7zyX0Psjo1m26gtqXZ2SaHgwH+Ja+PVyX6YDzQZSU4FRvuGxfkh9po9+eVJns7tNFWg0AC6Zik1qB9/i3xdinRsmmrINDa0oPD0TNyad6gL3HRbA6Up5tVUyLd3ipG/0irNNaycJ8MZ7NrEioz6N4qqzCKOalJKAuI5x+TLV6bWGODimvkC9teXvz1xu6yfAlSxqZc8xI+NdJ6+iMTgUSMrrZelX1PH2Gv2sgJRz2rq8yLVI0NUd+nGluzM81E7Csrc/x7rHhYc0+fadvHqzHqfERSGQKtZJdFGWrFLwtWg8jx7FJwKabs3re8pLlBOLT3/HpLfG4C85jCvzMsLa1VWfZIINi0S/68COTLO9kMKVA7zT56RymQiGbJV7lZXhKrYBNdJAaxSL949+f01f3BZgAyJNoAbx1CzURsUG2pO/rK9MVpYz4tKr1FbO1I0qNJeiUEUJoC7qJgJWkwu8JNc0Hm6hOykwLlIWYlWvx4qAuJJvo35JU4YRHmT+hSYliamv0nERintJpZQENiDjfTIrAXqyqx9OlfzgIXI8mcBjMy8qGMhGnQEPSsfNF3iA87THoOWy3loQJ4Ba5SZkYQYMx1rOL6eNpAJRGrvNhacb2H2rwXjdBMZkFFdtzba7VKPs8jfJ8FN2Cf8ISGDg/TVQ8Unl1RP9CWGibF0/no+R0RZ8xArG8eUe/y7
    username: AgAK8FcdgLJOIOOs/Bhjvy2+vBJy5DJktRVNf/1+UtRu435cDO4OfJ4fAY+QMrN7TMpgYxF9H/7d3vxDX+ul1rMa4gHRCV7CjO1x5EAjUcP/jt9OF9dAguEp/1G1eBse3wag0A28Z4Sq73Vk8sMnJ84CA+qv9oMxd3DWmpIjFkxkvE9mh25w4VjHx/0x2VoqEx0I9wnKGq123lv2JQRsp81ZS7JxUxMtduSAsCxvW6GF+1hQJFQuyy2OD9mByel0Qu+phYp4OEYU1sr5bVFy5SeYq+YPfxFrokCxXi9D+8Zrd+brFHfO7vI5Y7D6qFw7McZHgGG+3X5b/3yzKvCPs14Y64HrTIMr0MTx4KZjpQhb8u2TrIlQ6aVY0CQoWA63ePuHdc3RVnWNl54p6ODgs5MCq/EqCLIYimYr+Sta922fDDm4RafJw0JNGpkIHE9moExadnTPYQ9Jdae9ht3bB6Ca8W4mXU4g0drKnCtStPpnuJoBxDvLSKa6YKT79N3GEBTRHsZXFcAlOWum85kKQGtJ+v6LWbocMXvW6zan9jap5Pqu+uvOtlYe8XkcJpHVrZ88aIw6+ddQ1C+xldj3KLOpPok5FwS/t8S3RLf2TqIdMOki4vrtPmX05BXk+rRJ3JUUm1bJXIn3iWmdV9zJzPDMyHu/wOtqHjMIYTU1l4iOII+U9ZoIVvDIZym7U7i9N6lfbmPn
  template:
    metadata:
      name: nginx-basic-auth
      namespace: nginx-router
    type: kubernetes.io/basic-auth
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  namespace: nginx-router
  name: nginx-basic-auth
spec:
  basicAuth:
    secret: nginx-basic-auth
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: nginx-router
  name: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    traefik.ingress.kubernetes.io/router.middlewares: nginx-router-nginx-basic-auth@kubernetescrd # (namespace)-(name)@kubernetescrd
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - home.initialed85.cc
      secretName: nginx-router
  rules:
    - host: home.initialed85.cc
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: nginx
                port:
                  number: 80
